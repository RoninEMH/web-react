{"version":3,"sources":["serviceWorker.js","Project/Models/PowerLevel.js","Project/Models/Tier1.js","Project/Models/Tier2.js","Project/Models/Tier3.js","Project/App.js","index.js"],"names":["Boolean","window","location","hostname","match","id","PowerLevel","props","useState","powerLevel","setPowerLevel","kaioken","setKaioken","countT1","img","name","DBZCharacters","setDBZCharacters","handleImg","sort","x","y","map","character","handleKaioken","event","target","checked","console","log","val","value","prevPowerLevel","useEffect","fetch","then","response","json","characters","data","catch","setInterval","clearInterval","className","style","display","left","src","alt","onMouseEnter","onMouseLeave","type","onChange","height","width","marginLeft","Tier1","count","setCount","countT2","intervalId","prevCount","onClick","Tier2","countT3","Tier3","App","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.9e7b08d3.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { useEffect, useState } from \"react\";\r\n\r\nlet id;\r\n\r\nfunction PowerLevel(props) {\r\n  let [powerLevel, setPowerLevel] = useState(0);\r\n  let [kaioken, setKaioken] = useState(1);\r\n  const countT1 = props.countT1;\r\n  const defaultImage =\r\n    \"https://i.pinimg.com/originals/bf/b5/43/bfb543ee17f7953c9cba90498f1ae640.jpg\";\r\n\r\n  let img = defaultImage;\r\n\r\n  let [DBZCharacters, setDBZCharacters] = useState([\r\n    {\r\n      id: \"\",\r\n      name: \"\",\r\n      img: \"\",\r\n      powerLevel: 0,\r\n    },\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    fetch(\"./Characters.json\")\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        const characters = response.data.characters;\r\n        setDBZCharacters(characters);\r\n      })\r\n      .catch(() => console.log(\"Error\"));\r\n  }, []);\r\n\r\n  function print() {\r\n    console.log(DBZCharacters);\r\n  }\r\n\r\n  useEffect(() => {\r\n    handleImg();\r\n  }, [powerLevel]);\r\n\r\n  function handleImg() {\r\n    DBZCharacters.sort((x, y) => x.powerLevel - y.powerLevel);\r\n    DBZCharacters.map((character) => {\r\n      if (character.powerLevel <= powerLevel) {\r\n        img = character.img;\r\n      }\r\n      return character;\r\n    });\r\n    return img;\r\n  }\r\n\r\n  function handleIncrease() {\r\n    id = setInterval(() => {\r\n      setPowerLevel((prevPowerLevel) => {\r\n        return prevPowerLevel + 11;\r\n      });\r\n    }, 50);\r\n  }\r\n\r\n  function handleStop() {\r\n    if (id) clearInterval(id);\r\n  }\r\n\r\n  function handleKaioken(event) {\r\n    if (event.target.checked) {\r\n      console.log(event.target);\r\n      const val = event.target.value;\r\n      console.log(kaioken, \" previous\");\r\n      console.log(event.target.value, \" avtivated\");\r\n      setPowerLevel((prevPowerLevel) => {\r\n        console.log(\"prevKaioken= \", kaioken);\r\n        console.log(\"val= \", val);\r\n        return prevPowerLevel * (val / kaioken);\r\n      });\r\n      setKaioken(() => val);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    let id = setInterval(\r\n      setPowerLevel((prevPowerLevel) => prevPowerLevel + countT1),\r\n      500\r\n    );\r\n    return clearInterval(id);\r\n  }, [countT1]);\r\n\r\n  return (\r\n    <div>\r\n      <h1 className=\".powerLevel\">PowerLevel = {powerLevel}</h1>\r\n\r\n      <div style={{ display: \"inline-block\", left: \"80%\" }}>\r\n        <h2>Charge!!!</h2>\r\n        <img\r\n          src=\"https://media.tenor.com/images/e33e37a07ff08939d7f4f98d30d717f8/tenor.gif\"\r\n          alt=\"charge\"\r\n          onMouseEnter={handleIncrease}\r\n          onMouseLeave={handleStop}\r\n        ></img>\r\n        <br />\r\n        Not Kaioken:\r\n        <input name=\"Kaioken\" type=\"radio\" value=\"1\" onChange={handleKaioken} />\r\n        Kaioken x2:\r\n        <input name=\"Kaioken\" type=\"radio\" value=\"2\" onChange={handleKaioken} />\r\n        Kaioken x4:\r\n        <input name=\"Kaioken\" type=\"radio\" value=\"4\" onChange={handleKaioken} />\r\n        Kaioken x10:\r\n        <input\r\n          name=\"Kaioken\"\r\n          type=\"radio\"\r\n          value=\"10\"\r\n          onChange={handleKaioken}\r\n        />\r\n        Kaioken x20:\r\n        <input\r\n          name=\"Kaioken\"\r\n          type=\"radio\"\r\n          value=\"20\"\r\n          onChange={handleKaioken}\r\n        />\r\n      </div>\r\n      <img\r\n        className=\".character\"\r\n        height=\"500px\"\r\n        width=\"500px\"\r\n        style={{ marginLeft: \"400px\" }}\r\n        src={handleImg()}\r\n        alt=\"Character Power Level\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PowerLevel;\r\n","import React, { useState } from \"react\";\r\nimport PowerLevel from \"./PowerLevel.js\";\r\n\r\nfunction Tier1(props) {\r\n  const [count, setCount] = useState(0);\r\n  const countT2 = props.countT2;\r\n\r\n  let intervalId = setInterval(() => handleIncrease(), 1000 / 2);\r\n\r\n  function handleIncrease() {\r\n    setCount((prevCount) => prevCount + countT2);\r\n    clearInterval(intervalId);\r\n  }\r\n  function AddTier() {\r\n    setCount((prevCount) => prevCount + 1);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <PowerLevel countT1={count} />\r\n      <label>SSJ cells: {count}</label>\r\n      <button onClick={AddTier}>Add</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Tier1;\r\n","import React, { useState } from \"react\";\r\nimport Tier1 from \"./Tier1.js\";\r\n\r\nfunction Tier2(props) {\r\n  const [count, setCount] = useState(0);\r\n  const countT3 = props.countT3;\r\n\r\n  let intervalId = setInterval(() => handleIncrease(), 500);\r\n\r\n  function handleIncrease() {\r\n    setCount((prevCount) => prevCount + countT3);\r\n    clearInterval(intervalId);\r\n  }\r\n  function AddTier() {\r\n    setCount((prevCount) => prevCount + 1);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Tier1 countT2={count} />\r\n      <label>SSJ2 cells: {count}</label>\r\n      <button onClick={AddTier}>Add</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Tier2;\r\n","import React, { useState } from \"react\";\r\nimport Tier2 from \"./Tier2.js\";\r\n\r\nfunction Tier3(props) {\r\n  const [count, setCount] = useState(props.count);\r\n\r\n  function AddTier() {\r\n    setCount((prevCount) => prevCount + 1);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Tier2 countT3={count} />\r\n      <label>SSJ3 cells: {count}</label>\r\n      <button onClick={AddTier}>Add</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Tier3;\r\n","import React from \"react\";\r\nimport Tier3 from \"./Models/Tier3\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <Tier3 count={0} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\n\n//import App from \"./App/App\";\n//import MyApp from \"./TodoList/MyApp.js\";\n//import Fun from \"./Fun/App\";\nimport Project from \"./Project/App\";\n\nReactDOM.render(<Project />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}